@using xpos341.viewmodels

@model VMTblProduct
@{
	ViewData["Title"] = "Create Product";
}

<div class="card">
	<div class="card-body">

		<div class="h4 mb-4">@ViewData["Title"]</div>

		<form asp-action="Create" method="post" id="form_input" enctype="multipart/form-data">
			<div class="mb-3 row">
				<label for="NameProduct" class="col-sm-4 col-form-label">Name Product</label>
				<div class="col-sm-8">
					<input type="text" class="form-control rounded-pill" id="NameProduct" name="NameProduct">
					<span id="validate_NameProduct" class="text-danger"></span>
				</div>
			</div>
			<div class="mb-3 row">
				<label for="IdCategory" class="col-sm-4 col-form-label rounded-pill">Name Category</label>
				<div class="col-sm-8 ">
					@Html.DropDownList("IdCategory",
						new SelectList(ViewBag.ListCategory, "Id", "NameCategory"),
						"--Pilih Category--",
						new { @class = "form-control rounded-pill" }
						)
				</div>
			</div>
			<div class="mb-3 row">
				<label for="IdVariant" class="col-sm-4 col-form-label rounded-pill">Name Variant</label>
				<div class="col-sm-8 ">
					@Html.DropDownList("IdVariant",
						new SelectList(ViewBag.ListVariant, "Id", "NameVariant"),
						"--Pilih Variant--",
						new { @class = "form-control rounded-pill", @disabled = "disabled" }
						)
				</div>
			</div>
			<div class="mb-3 row">
				<label for="Price" class="col-sm-4 col-form-label">Price</label>
				<div class="col-sm-8">
					<input type="number" class="form-control rounded-pill" id="Price" name="Price">
				</div>
			</div>
			<div class="mb-3 row">
				<label for="Stock" class="col-sm-4 col-form-label">Stock</label>
				<div class="col-sm-8">
					<input type="number" class="form-control rounded-pill" id="Stock" name="Stock">
				</div>
			</div>
			<div class="mb-3 row">
				<label for="ImageFile" class="col-sm-4 col-form-label">Upload Image</label>
				<div class="col-sm-8">
					<input type="file" class="form-control rounded-pill" id="ImageFile" name="ImageFile" />
				</div>
			</div>


			<div class="mb-4 row">
				<div class="col-sm-10">
					<button type="submit" class="btn btn-primary rounded-pill">Submit</button>
					<a class="btn btn-light rounded-pill" asp-controller="Product" asp-action="Index">Back to List</a>
				</div>
			</div>
		</form>

	</div>
</div>


<script>

	$("#form_input").validate({
		errorClass: "text-danger",
		rules: {
			NameProduct: {
				required: true,
				minlength: 3,
			},
			Price: {
				required: true,
				number: true,
			},
			Stock: {
				required: true,
				number: true,
			},
			IdVariant: "required",
			IdCategory: "required",
			ImageFile: {
				required: true,
				typeFile: "jpg|jpeg|png",
				sizeFile: true,
			}
		},
		messages: {
			NameProduct: {
				required: "Please fill Name Product",
				minlength: "The name must consist of al least 3 characters",
			},
			Price: {
				required: "Please fill Price",
				number: "Please fill number only",
			},
			Stock: {
				required: "Please fill Stock",
				number: "Please fill number only",
			},
			IdVariant: "Please select Variant",
			IdCategory: "Please select category",
			ImageFile: {
				required: "Please fill image",
				typeFile: "Please upload jpg|jpeg|png",
				sizeFile: "Please upload file max size 1MB",
			}
		},
		submitHandler: function (form) {
			var name = $("#NameProduct").val()
			var id = 0;
			var idVariant = $("#IdVariant").val()
			// var idCategory = $("#IdCategory").val()
			// get category name selected from html.DropdownList
			// var textCategory = $("#IdCategory option:selected").text()
			var textVariant = $("#IdVariant option:selected").text()

			$.ajax({
				url: "/Product/CheckNameIsExist",
				type: "get",
				data: { name: name, id: id, idVariant: idVariant },
				dataType: "json",
				success: function (response) {
					// if (response.tes) {
					if (response) {
						// console.log("Tes")
						$("#validate_NameProduct").text("Name Product is already exists in Variant " + textVariant)
						return true
					}
					else {
						// alert("tes")
						fungsiSubmit(form)
					}
				}
			})
		}
	})

	// toastr
	function fungsiSubmit(form) {

		var dataForm = $(form).serializeArray()

		var formData = new FormData()

		$.each(dataForm, function (key, input) {
			formData.append(input.name, input.value)
		})

		var file = $("#ImageFile").prop("files")
		if(file.length > 0) {
			formData.append("ImageFile", file[0])
		}

		$.ajax({
			url: "/Product/Create",
			type: "post",
			data: formData,
			dataType: "json",
			contentType: false,
			processData: false,
			success: function (response) {
				var data = response.dataResponse

				if (data.success) {
					$("#my_modal").modal("hide")

					Swal.fire({
						title: "Information!",
						text: data.message,
						icon: "success"
					}).then(function () {
						window.location.reload()
					})

					// toastr.success(
					// 	data.message,
					// 	'',
					// 	toastr.options = {
					// 		"closeButton": true,
					// 		"debug": false,
					// 		"newestOnTop": false,
					// 		"progressBar": false,
					// 		"positionClass": "toast-top-center",
					// 		"preventDuplicates": false,
					// 		"onclick": null,
					// 		"showDuration": "3000",
					// 		"hideDuration": "2000",
					// 		"timeOut": "1000",
					// 		"extendedTimeOut": "1000",
					// 		"showEasing": "swing",
					// 		"hideEasing": "linear",
					// 		"showMethod": "fadeIn",
					// 		"hideMethod": "fadeOut",
					// 		onHidden: function () {
					// 			window.location.reload()
					// 		}
					// 	}
					// )
				}
				else {
					// toastr.errorClass(data.message)
					Swal.fire({
						icon: "error",
						title: "Oops...",
						text: data.message
					});
				}
			}
		})
	}

	jQuery.validator.addMethod("typeFile", function (value, element, param) {
		return value.match(new RegExp("." + param + "$"));
	});

	jQuery.validator.addMethod("sizeFile", function (val, element) {
		var size = element.files[0].size;
		if (size > 1048576)// checks the file more than 1 MB
		{
			return false;
		} else {
			return true;
		}
	});

	// dropdown category & variant
	$("#IdCategory").change(function () {
		var idCategory = $(this).val()
		if (idCategory) { // Jika kategori sudah dipilih
			$("#IdVariant").attr("disabled", false);
			$.ajax({
				url: "/Product/GetDataByIdCategory",
				data: { id: idCategory },
				type: "get",
				dataType: "json",
				success: function (response) {
					console.log(response)
					$("#IdVariant").empty()
					$("#IdVariant").append("<option value=''>--Pilih Variant--</option>")
					$.each(response, function (index, res) {
						$("#IdVariant").append("<option value='" + res.id + "'>" + res.nameVariant + "</option>")
					})
				}
			})
		} 
		else {
			// Jika kategori belum dipilih, kunci kembali dropdown Variant
			$("#IdVariant").attr("disabled", true);
			$("#IdVariant").empty()
			$("#IdVariant").append("<option value=''>--Pilih Variant--</option>")
		}
	})

	

</script>


